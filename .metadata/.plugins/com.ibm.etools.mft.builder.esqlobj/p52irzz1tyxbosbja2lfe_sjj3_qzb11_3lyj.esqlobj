/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN


		CALL EDI_TGetIFTDGN(Environment.variables.txnID,Environment.Variables.TXTResult1[],Environment.Variables.TXTResult2[],Environment.Variables.TXTResult3[],Environment.Variables.TXTResult4[],Environment.Variables.TXTResult5[],Environment.Variables.TXTResult6[],Environment.Variables.TXTResult7[]);
		SET Environment.variables.dbEndTime = PASSTHRU('SELECT CURRENT_TIMESTAMP AS DBENDTIME;');
		SET OutputRoot.Properties.CodedCharSetId = 1208;

		SET OutputRoot.Properties.MessageType ='{}:iftdgn';
		SET OutputRoot.Properties.MessageSet ='{JMB_DFDL}';
		SET OutputRoot.Properties.ReplyProtocol = 'FILE';

		SET OutputRoot.DFDL.iftdgn.UNH.DocumentType = Environment.Variables.TXTResult1[1].DocumentType;
		SET OutputRoot.DFDL.iftdgn.UNH.DocumentName = Environment.Variables.TXTResult1[1].DocumentName;
		SET OutputRoot.DFDL.iftdgn.UNH.DocumentNumber = Environment.Variables.TXTResult1[1].DocumentNumber;
		SET OutputRoot.DFDL.iftdgn.UNH.CommonRefNumber = Environment.Variables.TXTResult1[1].CommonRefNumber;
		SET OutputRoot.DFDL.iftdgn.UNH.MessageType = Environment.Variables.TXTResult1[1].Messagetype;
		SET OutputRoot.DFDL.iftdgn.UNH.SenderID = Environment.Variables.TXTResult1[1].SenderID;
		--for RPD
		DECLARE countRecord INTEGER 0;
		DECLARE i INTEGER 1;

		SET countRecord = CARDINALITY(Environment.Variables.TXTResult2[]);

		WHILE countRecord > 0 DO
			SET OutputRoot.DFDL.iftdgn.RPD.RecipientsID[i] = Environment.Variables.TXTResult2[i].ReceivingParty ;
			SET i = i + 1;
			SET countRecord = countRecord - 1;
		END WHILE;
		--for NPD
		DECLARE countRecord1 INTEGER 0;
		DECLARE j INTEGER 1;

		SET countRecord1 = CARDINALITY(Environment.Variables.TXTResult3[]);

		WHILE countRecord1 > 0 DO
			SET OutputRoot.DFDL.iftdgn.NPD.NotifyPartyIDs[j] = Environment.Variables.TXTResult3[j].NotifyParty ;
			SET j = j + 1;
			SET countRecord1 = countRecord1 - 1;
		END WHILE;
		--for DGH
		SET OutputRoot.DFDL.iftdgn.DGH.RecordType = Environment.Variables.TXTResult4[1].RecordType;
		--SET OutputRoot.DFDL.IFTDGN.DGH.VCN = Environment.Variables.TXTResult4[1].RecordType;
		SET OutputRoot.DFDL.iftdgn.DGH.CallSign = Environment.Variables.TXTResult4[1].CallSign;
		SET OutputRoot.DFDL.iftdgn.DGH.IMONumber = Environment.Variables.TXTResult4[1].IMONumber;
		SET OutputRoot.DFDL.iftdgn.DGH.VoyageNumber = Environment.Variables.TXTResult4[1].VoyageNumber;
		SET OutputRoot.DFDL.iftdgn.DGH.CountryCodeofVessel = Environment.Variables.TXTResult4[1].VesselCountryCode;
		SET OutputRoot.DFDL.iftdgn.DGH.ShippingagentCode = Environment.Variables.TXTResult4[1].ShippingAgent;
		SET OutputRoot.DFDL.iftdgn.DGH.ShippingLineCode = Environment.Variables.TXTResult4[1].ShippingLine;
		SET OutputRoot.DFDL.iftdgn.DGH.IGMNo = Environment.Variables.TXTResult4[1].IGMNumber;
		SET OutputRoot.DFDL.iftdgn.DGH.IGMDate = Environment.Variables.TXTResult4[1].IGMDate;
		SET OutputRoot.DFDL.iftdgn.DGH.RotationNumber = Environment.Variables.TXTResult4[1].RotationNumber;
		SET OutputRoot.DFDL.iftdgn.DGH.RotationDate = Environment.Variables.TXTResult4[1].RotationNumberDate;
		-- --for CGT

		DECLARE countRecord2 INTEGER 0;
		DECLARE countRecord3 INTEGER 0;
		DECLARE k INTEGER 1;
		DECLARE m INTEGER 1;		


		SET countRecord2 = CARDINALITY(Environment.Variables.TXTResult5[]);
		SET countRecord3 = CARDINALITY(Environment.Variables.TXTResult6[]);
		DECLARE sk INTEGER 1;
		DECLARE ad INTEGER 1;
		WHILE (sk <= countRecord2) DO
			SET OutputRoot.DFDL.iftdgn.CGT[sk].RecordType = Environment.Variables.TXTResult5[sk].RecordType ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].RecordNumber = Environment.Variables.TXTResult5[sk].RecordNumber ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].ContainerAgentCode = Environment.TXTResult5.TXTResult5[k].CACode ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].ContainerNumber = Environment.Variables.TXTResult5[sk].ContainerNumber ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].ContainerTypeClassificationCode = Environment.Variables.TXTResult5[sk].ContainerClassification ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].ISOcodeofContainer = Environment.Variables.TXTResult5[sk].ContainerISOCode ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].shippersownContainerFlag = Environment.Variables.TXTResult5[sk].ShippersOwnContainerFlag ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].ExpectedDateofArrivalofCargoContainer = Environment.Variables.TXTResult5[sk].CargoETA ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].PortofLoadingdischargeCode = Environment.Variables.TXTResult5[sk].POLorDischargeCode ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].DateofLoadingdischarge = Environment.Variables.TXTResult5[sk].DOLorDischarge ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].finalPortofdischarge = Environment.Variables.TXTResult5[sk].FinalPortOfDischarge ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].CargoGascylinderRadio = Environment.Variables.TXTResult5[sk].CargoType ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].EquipmentStatus = Environment.Variables.TXTResult5[sk].EquipmentStatus ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].RSDAERBCertificateNumber = Environment.Variables.TXTResult5[sk].RSDCertNumber ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].RSDAERBCertDate = Environment.Variables.TXTResult5[sk].RSDCertDate ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].RSDAERBCertValidity = Environment.Variables.TXTResult5[sk].RSDValidityDate ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].IGMLineNumber = Environment.Variables.TXTResult5[sk].IGMLineNumber ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].IGMSubLineNumber = Environment.Variables.TXTResult5[sk].IGMSubLineNumber ;
			SET OutputRoot.DFDL.iftdgn.CGT[sk].SBNumber = Environment.Variables.TXTResult5[sk].NotifyParty ;
			--DGD
			--SET ad = 1;
			WHILE (ad <= countRecord3) DO
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].MLOclass = Environment.Variables.TXTResult6[ad].MLOClass;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].IMOClass = Environment.Variables.TXTResult6[ad].IMOClass;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].UNIMDGNumber = Environment.Variables.TXTResult6[ad].UNIMDGNumber;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].ContainerCargo = Environment.Variables.TXTResult6[ad].ContainerOrCargo;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].CargoCommodityDescription = Environment.Variables.TXTResult6[ad].CargoDescription;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].MarksandNumbers = Environment.Variables.TXTResult6[ad].MarksAndNumbers;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].NumberofPackages = Environment.Variables.TXTResult6[ad].NumberOfPackages;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].PackageType = Environment.Variables.TXTResult6[ad].PackageType;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].UnitofQuantity = Environment.Variables.TXTResult6[ad].UnitOfQuantity;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].Weightofconsignment = Environment.Variables.TXTResult6[ad].WeightOfConsignment;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].WeightofDangeroussubstance = Environment.Variables.TXTResult6[ad].WeightOfDangerousSubstance;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].Handlinginstructions = Environment.Variables.TXTResult6[ad].HandlingInstructions;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].EmergencyMedicalProceduresEMS = Environment.Variables.TXTResult6[ad].EMS;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].MedicalFirstAidGuide = Environment.Variables.TXTResult6[ad].MFAG;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].DescriptionofFilledcylinders = Environment.Variables.TXTResult6[ad].DescriptionOfFilledCylinders;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].StorageInstruction = Environment.Variables.TXTResult6[ad].StorageInstruction;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].FlashPointMax = Environment.Variables.TXTResult6[ad].MaxFlashPoint;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].FlashPointMIN = Environment.Variables.TXTResult6[ad].MinFlashPoint;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].stowagepositiononBoard = Environment.Variables.TXTResult6[ad].StowagePositionOnBoard;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].TotalnumberofcylindersinVessel = Environment.Variables.TXTResult6[ad].ToalNoOfCylindersInVessel;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].TotalquantityofcylinderinVessel = Environment.Variables.TXTResult6[ad].ToalQtyOfCylindersInVessel;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].Unitofquantity = Environment.Variables.TXTResult6[ad].UnitOfQty;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].Customsitecode = Environment.Variables.TXTResult6[ad].CustomSiteCode;
				SET OutputRoot.DFDL.iftdgn.CGT[sk].DGD[1].field3 = Environment.Variables.TXTResult6[ad].EmergencyContactNumber;
				SET ad = countRecord3 +1;

			END WHILE;
			SET sk = sk + 1;
			SET ad = sk;
		END WHILE;		



		SET OutputRoot.DFDL.iftdgn.UNT.DocumentCreatedDateandTime = Environment.Variables.TXTResult7[1].IssuedDateTime;		


	END;

	
