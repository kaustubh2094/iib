/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		DECLARE InXML CHARACTER;
		SET InXML = Environment.Variables.InXML;		
		
		SET Environment.variables.dbEndTime = PASSTHRU('SELECT CURRENT_TIMESTAMP AS DBENDTIME;');
		DECLARE charPosCommonRefStart INTEGER POSITION('<CommonRefNumber>' IN Environment.Variables.InXML);
		DECLARE charPosCommonRefEnd INTEGER POSITION('</CommonRefNumber>' IN Environment.Variables.InXML);
		DECLARE commonRefLength INTEGER charPosCommonRefEnd - charPosCommonRefStart;
		SET Environment.variables.commonRefNo = SUBSTRING(Environment.Variables.InXML FROM charPosCommonRefStart+17 FOR commonRefLength);
		SET Environment.variables.commonRefNo = SUBSTRING(Environment.variables.commonRefNo BEFORE '<');
		DECLARE charPosSenderIdStart INTEGER POSITION('<SenderID>' IN Environment.Variables.InXML);
		DECLARE charPosSenderIdEnd INTEGER POSITION('</SenderID>' IN Environment.Variables.InXML);
		DECLARE senderIdLength INTEGER charPosSenderIdEnd - charPosSenderIdStart;
		SET Environment.variables.msgSender = SUBSTRING(Environment.Variables.InXML FROM charPosSenderIdStart+10 FOR senderIdLength);
		SET Environment.variables.msgSender = SUBSTRING(Environment.variables.msgSender BEFORE '<');
	
		DECLARE charPosPortCodeStart INTEGER POSITION('<PortCode>' IN Environment.Variables.InXML);
		DECLARE charPosPortCodeEnd INTEGER POSITION('</PortCode>' IN Environment.Variables.InXML);
		DECLARE portCodeLength INTEGER charPosPortCodeEnd - charPosPortCodeStart;
		SET Environment.variables.portCode = SUBSTRING(Environment.Variables.InXML FROM charPosPortCodeStart+10 FOR portCodeLength);
		SET Environment.variables.portCode = SUBSTRING(Environment.variables.portCode BEFORE '<');
		SET Environment.variables.dbStartTime = PASSTHRU('SELECT CURRENT_TIMESTAMP AS DBSTARTTIME;');
		CALL EDI_XInsCLPMSG(InXML, Environment.Variable.results1[], Environment.Variable.results2[],Environment.Variable.results3[],Environment.Variable.results4[], Environment.Variable.results5[],Environment.Variable.results6[],Environment.Variable.results7[],Environment.Variable.results8[],Environment.Variable.results9[], Environment.Variable.results10[],Environment.Variable.results11[],Environment.Variable.results12[]);
		COMMIT;
		SET Environment.variables.dbEndTime = PASSTHRU('SELECT CURRENT_TIMESTAMP AS DBENDTIME;');		
		
		IF (Environment.Variable.results5[1].ErrorMessage = 'Success')OR (Environment.Variable.results6[1].ErrorMessage = 'Success') OR (Environment.Variable.results7[1].ErrorMessage = 'Success')OR (Environment.Variable.results8[1].ErrorMessage = 'Success')OR (Environment.Variable.results9[1].ErrorMessage = 'Success') OR (Environment.Variable.results10[1].ErrorMessage = 'Success') OR (Environment.Variable.results11[1].ErrorMessage = 'Success') OR (Environment.Variable.results12[1].ErrorMessage = 'Success') THEN
			SET Environment.variables.consumptionFlag = TRUE;
			SET OutputRoot.JSON.Data.PCS.EDI.Action_In = 'CLPMSG';
			SET OutputRoot.JSON.Data.PCS.EDI.Common_Ref = Environment.variables.commonRefNo;
			PROPAGATE TO TERMINAL 'out2';
		ELSE
			SET Environment.variables.consumptionFlag = FALSE;
			SET Environment.variables.ackURL = PASSTHRU('SELECT FTP_PATH AS URL FROM IPAOWNER.XX_TPCS_DOC_PORT_MAP WHERE SITE_ID = ? AND MSG_TYPE = ?;',Environment.variables.msgSender,'ACKAPI');
		    SET Environment.variables.AuditSeq = PASSTHRU('SELECT NEXT VALUE FOR IPAOWNER.TPCS_AUDIT_API_SEQ AS SEQ;');
		    INSERT INTO Database.PCSIBM.TIBM_LOG_AUDIT_API(API_Request_ID,API_Channel_ID,API_Request_Date,SITE_ID,MS_REF_NO,MSG_TYPE,MSG_DIRECTION,API_URL,API_TIMESTAMP,TRM_STATUS,PAYLOAD_IN,AUDITSEQ) VALUES(Environment.variables.requestId,Environment.variables.channelId,CURRENT_TIMESTAMP,Environment.variables.msgSender,Environment.variables.commonRefNo,'AGDORDCT','INBOUND',Environment.variables.ackURL[1].URL,CURRENT_TIMESTAMP,'0',Environment.Variables.InXML,Environment.variables.AuditSeq[1].SEQ);
		    INSERT INTO Database.PCSIBM.TIBM_LOG_ERROR(Executiongroup,Brokername,FlowName,ErrorCode,ErrorText,ErrorDate,MsgBody,XMLDATA,CREATED_DT,MS_REF_NO,EVENT_NAME,PORT_CODE) VALUES ('PCS_WEBSER','PCS_UAT_II','CLPMSG_XML_API',COALESCE(Environment.Variable.results2[1].ErrorCode,Environment.Variable.results5[1].ErrorCode,Environment.Variable.results6[1].ErrorCode,Environment.Variable.results7[1].ErrorCode,Environment.Variable.results8[1].ErrorCode,Environment.Variable.results9[1].ErrorCode,Environment.Variable.results10[1].ErrorCode,Environment.Variable.results11[1].ErrorCode,Environment.Variable.results12[1].ErrorCode,''),COALESCE(Environment.Variable.results2[1].ErrorMessage,Environment.Variable.results5[1].ErrorMessage,Environment.Variable.results6[1].ErrorMessage,Environment.Variable.results7[1].ErrorMessage,Environment.Variable.results8[1].ErrorMessage,Environment.Variable.results9[1].ErrorMessage,Environment.Variable.results10[1].ErrorMessage,Environment.Variable.results11[1].ErrorMessage,Environment.Variable.results12[1].ErrorMessage,''),CURRENT_TIMESTAMP,'CLPMSG_XML_API',Environment.Variables.InXML,CURRENT_TIMESTAMP,Environment.variables.commonRefNo,'Consumption',Environment.variables.portCode);		    
		    COMMIT;
		    SET Environment.variables.currentSeqValue = Environment.variables.AuditSeq[1].SEQ;
			PROPAGATE TO TERMINAL 'out1';
	    	RETURN FALSE;
		END IF;	
		
	END;
	CREATE PROCEDURE EDI_XInsCLPMSG (IN T CHARACTER)
	LANGUAGE DATABASE
	DYNAMIC RESULT SETS 12
	EXTERNAL NAME "dbo.EDI_XInsCLPMSG";
